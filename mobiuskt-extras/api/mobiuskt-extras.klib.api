// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosDeviceArm64, watchosSimulatorArm64]
// Alias: native => [iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosDeviceArm64, watchosSimulatorArm64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.drewcarlson:mobiuskt-extras>
abstract interface <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> kt.mobius.extras.patterns/InnerEffectHandler { // kt.mobius.extras.patterns/InnerEffectHandler|null[0]
    abstract fun handleInnerEffects(#A, kotlin/Boolean, kotlin.collections/Set<#C>): kt.mobius/Next<#A, #B> // kt.mobius.extras.patterns/InnerEffectHandler.handleInnerEffects|handleInnerEffects(1:0;kotlin.Boolean;kotlin.collections.Set<1:2>){}[0]

    final object Companion { // kt.mobius.extras.patterns/InnerEffectHandler.Companion|null[0]
        final inline fun <#A2: kotlin/Any?, #B2: kotlin/Any?, #C2: kotlin/Any?> invoke(crossinline kotlin/Function3<#A2, kotlin/Boolean, kotlin.collections/Set<#C2>, kt.mobius/Next<#A2, #B2>>): kt.mobius.extras.patterns/InnerEffectHandler<#A2, #B2, #C2> // kt.mobius.extras.patterns/InnerEffectHandler.Companion.invoke|invoke(kotlin.Function3<0:0,kotlin.Boolean,kotlin.collections.Set<0:2>,kt.mobius.Next<0:0,0:1>>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
    }
}

final class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?, #D: kotlin/Any?, #E: kotlin/Any?, #F: kotlin/Any?> kt.mobius.extras.patterns/InnerUpdate : kt.mobius/Update<#A, #B, #C> { // kt.mobius.extras.patterns/InnerUpdate|null[0]
    constructor <init>(kt.mobius/Update<#D, #E, #F>, kt.mobius.functions/Function<#A, #D>, kt.mobius.functions/Function<#B, #E?>, kt.mobius.functions/BiFunction<#A, #D, #A>, kt.mobius.extras.patterns/InnerEffectHandler<#A, #C, #F>) // kt.mobius.extras.patterns/InnerUpdate.<init>|<init>(kt.mobius.Update<1:3,1:4,1:5>;kt.mobius.functions.Function<1:0,1:3>;kt.mobius.functions.Function<1:1,1:4?>;kt.mobius.functions.BiFunction<1:0,1:3,1:0>;kt.mobius.extras.patterns.InnerEffectHandler<1:0,1:2,1:5>){}[0]

    final val eventExtractor // kt.mobius.extras.patterns/InnerUpdate.eventExtractor|{}eventExtractor[0]
        final fun <get-eventExtractor>(): kt.mobius.functions/Function<#B, #E?> // kt.mobius.extras.patterns/InnerUpdate.eventExtractor.<get-eventExtractor>|<get-eventExtractor>(){}[0]
    final val innerEffectHandler // kt.mobius.extras.patterns/InnerUpdate.innerEffectHandler|{}innerEffectHandler[0]
        final fun <get-innerEffectHandler>(): kt.mobius.extras.patterns/InnerEffectHandler<#A, #C, #F> // kt.mobius.extras.patterns/InnerUpdate.innerEffectHandler.<get-innerEffectHandler>|<get-innerEffectHandler>(){}[0]
    final val innerUpdate // kt.mobius.extras.patterns/InnerUpdate.innerUpdate|{}innerUpdate[0]
        final fun <get-innerUpdate>(): kt.mobius/Update<#D, #E, #F> // kt.mobius.extras.patterns/InnerUpdate.innerUpdate.<get-innerUpdate>|<get-innerUpdate>(){}[0]
    final val modelExtractor // kt.mobius.extras.patterns/InnerUpdate.modelExtractor|{}modelExtractor[0]
        final fun <get-modelExtractor>(): kt.mobius.functions/Function<#A, #D> // kt.mobius.extras.patterns/InnerUpdate.modelExtractor.<get-modelExtractor>|<get-modelExtractor>(){}[0]
    final val modelUpdater // kt.mobius.extras.patterns/InnerUpdate.modelUpdater|{}modelUpdater[0]
        final fun <get-modelUpdater>(): kt.mobius.functions/BiFunction<#A, #D, #A> // kt.mobius.extras.patterns/InnerUpdate.modelUpdater.<get-modelUpdater>|<get-modelUpdater>(){}[0]

    final fun update(#A, #B): kt.mobius/Next<#A, #C> // kt.mobius.extras.patterns/InnerUpdate.update|update(1:0;1:1){}[0]

    final object Companion { // kt.mobius.extras.patterns/InnerUpdate.Companion|null[0]
        final fun <#A2: kotlin/Any?, #B2: kotlin/Any?, #C2: kotlin/Any?, #D2: kotlin/Any?, #E2: kotlin/Any?, #F2: kotlin/Any?> builder(): kt.mobius.extras.patterns/InnerUpdate.Companion.Builder<#A2, #B2, #C2, #D2, #E2, #F2> // kt.mobius.extras.patterns/InnerUpdate.Companion.builder|builder(){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>;4§<kotlin.Any?>;5§<kotlin.Any?>}[0]

        final class <#A2: kotlin/Any?, #B2: kotlin/Any?, #C2: kotlin/Any?, #D2: kotlin/Any?, #E2: kotlin/Any?, #F2: kotlin/Any?> Builder { // kt.mobius.extras.patterns/InnerUpdate.Companion.Builder|null[0]
            constructor <init>() // kt.mobius.extras.patterns/InnerUpdate.Companion.Builder.<init>|<init>(){}[0]

            final fun build(): kt.mobius.extras.patterns/InnerUpdate<#A2, #B2, #C2, #D2, #E2, #F2> // kt.mobius.extras.patterns/InnerUpdate.Companion.Builder.build|build(){}[0]
            final fun eventExtractor(kt.mobius.functions/Function<#B2, #E2?>): kt.mobius.extras.patterns/InnerUpdate.Companion.Builder<#A2, #B2, #C2, #D2, #E2, #F2> // kt.mobius.extras.patterns/InnerUpdate.Companion.Builder.eventExtractor|eventExtractor(kt.mobius.functions.Function<1:1,1:4?>){}[0]
            final fun innerEffectHandler(kt.mobius.extras.patterns/InnerEffectHandler<#A2, #C2, #F2>): kt.mobius.extras.patterns/InnerUpdate.Companion.Builder<#A2, #B2, #C2, #D2, #E2, #F2> // kt.mobius.extras.patterns/InnerUpdate.Companion.Builder.innerEffectHandler|innerEffectHandler(kt.mobius.extras.patterns.InnerEffectHandler<1:0,1:2,1:5>){}[0]
            final fun innerUpdate(kt.mobius/Update<#D2, #E2, #F2>): kt.mobius.extras.patterns/InnerUpdate.Companion.Builder<#A2, #B2, #C2, #D2, #E2, #F2> // kt.mobius.extras.patterns/InnerUpdate.Companion.Builder.innerUpdate|innerUpdate(kt.mobius.Update<1:3,1:4,1:5>){}[0]
            final fun modelExtractor(kt.mobius.functions/Function<#A2, #D2>): kt.mobius.extras.patterns/InnerUpdate.Companion.Builder<#A2, #B2, #C2, #D2, #E2, #F2> // kt.mobius.extras.patterns/InnerUpdate.Companion.Builder.modelExtractor|modelExtractor(kt.mobius.functions.Function<1:0,1:3>){}[0]
            final fun modelUpdater(kt.mobius.functions/BiFunction<#A2, #D2, #A2>): kt.mobius.extras.patterns/InnerUpdate.Companion.Builder<#A2, #B2, #C2, #D2, #E2, #F2> // kt.mobius.extras.patterns/InnerUpdate.Companion.Builder.modelUpdater|modelUpdater(kt.mobius.functions.BiFunction<1:0,1:3,1:0>){}[0]
        }
    }
}

final class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?, #D: kotlin/Any?> kt.mobius.extras/MappedEffectHandler : kt.mobius/Connectable<#A, #B> { // kt.mobius.extras/MappedEffectHandler|null[0]
    constructor <init>(kt.mobius/Connectable<#C, #D>, kotlin/Function1<#A, #C?> = ..., kotlin/Function1<#D, #B?> = ...) // kt.mobius.extras/MappedEffectHandler.<init>|<init>(kt.mobius.Connectable<1:2,1:3>;kotlin.Function1<1:0,1:2?>;kotlin.Function1<1:3,1:1?>){}[0]

    final fun connect(kt.mobius.functions/Consumer<#B>): kt.mobius/Connection<#A> // kt.mobius.extras/MappedEffectHandler.connect|connect(kt.mobius.functions.Consumer<1:1>){}[0]
}

final class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> kt.mobius.extras/CompositeLogger : kt.mobius/MobiusLoop.Logger<#A, #B, #C> { // kt.mobius.extras/CompositeLogger|null[0]
    final fun afterInit(#A, kt.mobius/First<#A, #C>) // kt.mobius.extras/CompositeLogger.afterInit|afterInit(1:0;kt.mobius.First<1:0,1:2>){}[0]
    final fun afterUpdate(#A, #B, kt.mobius/Next<#A, #C>) // kt.mobius.extras/CompositeLogger.afterUpdate|afterUpdate(1:0;1:1;kt.mobius.Next<1:0,1:2>){}[0]
    final fun beforeInit(#A) // kt.mobius.extras/CompositeLogger.beforeInit|beforeInit(1:0){}[0]
    final fun beforeUpdate(#A, #B) // kt.mobius.extras/CompositeLogger.beforeUpdate|beforeUpdate(1:0;1:1){}[0]
    final fun exceptionDuringInit(#A, kotlin/Throwable) // kt.mobius.extras/CompositeLogger.exceptionDuringInit|exceptionDuringInit(1:0;kotlin.Throwable){}[0]
    final fun exceptionDuringUpdate(#A, #B, kotlin/Throwable) // kt.mobius.extras/CompositeLogger.exceptionDuringUpdate|exceptionDuringUpdate(1:0;1:1;kotlin.Throwable){}[0]

    final object Companion { // kt.mobius.extras/CompositeLogger.Companion|null[0]
        final fun <#A2: kotlin/Any?, #B2: kotlin/Any?, #C2: kotlin/Any?> from(kotlin/Array<out kt.mobius/MobiusLoop.Logger<#A2, #B2, #C2>>...): kt.mobius/MobiusLoop.Logger<#A2, #B2, #C2> // kt.mobius.extras/CompositeLogger.Companion.from|from(kotlin.Array<out|kt.mobius.MobiusLoop.Logger<0:0,0:1,0:2>>...){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
    }
}

final class <#A: kotlin/Any?, #B: kotlin/Any?> kt.mobius.extras/CompositeEffectHandler : kt.mobius/Connectable<#A, #B> { // kt.mobius.extras/CompositeEffectHandler|null[0]
    final fun connect(kt.mobius.functions/Consumer<#B>): kt.mobius/Connection<#A> // kt.mobius.extras/CompositeEffectHandler.connect|connect(kt.mobius.functions.Consumer<1:1>){}[0]

    final object Companion { // kt.mobius.extras/CompositeEffectHandler.Companion|null[0]
        final fun <#A2: kotlin/Any?, #B2: kotlin/Any?> from(kotlin.collections/List<kt.mobius/Connectable<#A2, #B2>>): kt.mobius/Connectable<#A2, #B2> // kt.mobius.extras/CompositeEffectHandler.Companion.from|from(kotlin.collections.List<kt.mobius.Connectable<0:0,0:1>>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
        final fun <#A2: kotlin/Any?, #B2: kotlin/Any?> from(kotlin/Array<out kt.mobius/Connectable<#A2, #B2>>...): kt.mobius/Connectable<#A2, #B2> // kt.mobius.extras/CompositeEffectHandler.Companion.from|from(kotlin.Array<out|kt.mobius.Connectable<0:0,0:1>>...){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
    }
}

final class <#A: kotlin/Any?, #B: kotlin/Any?> kt.mobius.extras/FilterEffectHandler : kt.mobius/Connectable<#A, #B> { // kt.mobius.extras/FilterEffectHandler|null[0]
    constructor <init>(kt.mobius/Connectable<#A, #B>, kotlin/Function1<#A, kotlin/Boolean>) // kt.mobius.extras/FilterEffectHandler.<init>|<init>(kt.mobius.Connectable<1:0,1:1>;kotlin.Function1<1:0,kotlin.Boolean>){}[0]

    final fun connect(kt.mobius.functions/Consumer<#B>): kt.mobius/Connection<#A> // kt.mobius.extras/FilterEffectHandler.connect|connect(kt.mobius.functions.Consumer<1:1>){}[0]

    final object Companion { // kt.mobius.extras/FilterEffectHandler.Companion|null[0]
        final fun <#A2: kotlin/Any?, #B2: kotlin/Any?> from(kt.mobius/Connectable<#A2, #B2>, kotlin.collections/List<kotlin.reflect/KClass<*>>): kt.mobius/Connectable<#A2, #B2> // kt.mobius.extras/FilterEffectHandler.Companion.from|from(kt.mobius.Connectable<0:0,0:1>;kotlin.collections.List<kotlin.reflect.KClass<*>>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
        final fun <#A2: kotlin/Any?, #B2: kotlin/Any?> from(kt.mobius/Connectable<#A2, #B2>, kotlin/Array<out kotlin.reflect/KClass<*>>...): kt.mobius/Connectable<#A2, #B2> // kt.mobius.extras/FilterEffectHandler.Companion.from|from(kt.mobius.Connectable<0:0,0:1>;kotlin.Array<out|kotlin.reflect.KClass<*>>...){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
    }
}

final class <#A: kotlin/Any?> kt.mobius.extras/QueuedConsumer : kt.mobius.functions/Consumer<#A> { // kt.mobius.extras/QueuedConsumer|null[0]
    constructor <init>() // kt.mobius.extras/QueuedConsumer.<init>|<init>(){}[0]

    final fun accept(#A) // kt.mobius.extras/QueuedConsumer.accept|accept(1:0){}[0]
    final fun dequeueAll(kt.mobius.functions/Consumer<#A>) // kt.mobius.extras/QueuedConsumer.dequeueAll|dequeueAll(kt.mobius.functions.Consumer<1:0>){}[0]
}

final object kt.mobius.extras.patterns/InnerEffectHandlers { // kt.mobius.extras.patterns/InnerEffectHandlers|null[0]
    final fun <#A1: kotlin/Any?, #B1: kotlin/Any?, #C1: kotlin/Any?> ignoreEffects(): kt.mobius.extras.patterns/InnerEffectHandler<#A1, #B1, #C1> // kt.mobius.extras.patterns/InnerEffectHandlers.ignoreEffects|ignoreEffects(){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
    final fun <#A1: kotlin/Any?, #B1: kotlin/Any?, #C1: kotlin/Any?> mapEffects(kt.mobius.functions/Function<#C1, #B1>): kt.mobius.extras.patterns/InnerEffectHandler<#A1, #B1, #C1> // kt.mobius.extras.patterns/InnerEffectHandlers.mapEffects|mapEffects(kt.mobius.functions.Function<0:2,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
}

final fun <#A: kotlin/Any?, #B: kotlin/Any?> (kt.mobius/Connectable<#A, #B>).kt.mobius.extras/exclude(kotlin.collections/List<kotlin.reflect/KClass<*>>): kt.mobius/Connectable<#A, #B> // kt.mobius.extras/exclude|exclude@kt.mobius.Connectable<0:0,0:1>(kotlin.collections.List<kotlin.reflect.KClass<*>>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> (kt.mobius/Connectable<#A, #B>).kt.mobius.extras/exclude(kotlin/Array<out kotlin.reflect/KClass<*>>...): kt.mobius/Connectable<#A, #B> // kt.mobius.extras/exclude|exclude@kt.mobius.Connectable<0:0,0:1>(kotlin.Array<out|kotlin.reflect.KClass<*>>...){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> (kt.mobius/Connectable<#A, #B>).kt.mobius.extras/filter(kotlin/Function1<#A, kotlin/Boolean>): kt.mobius/Connectable<#A, #B> // kt.mobius.extras/filter|filter@kt.mobius.Connectable<0:0,0:1>(kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?, #B: reified kotlin/Any?, #C: reified kotlin/Any?, #D: kotlin/Any?> (kt.mobius/Connectable<#C, #D>).kt.mobius.extras/mapped(noinline kotlin/Function1<#A, #C?> = ..., noinline kotlin/Function1<#D, #B?> = ...): kt.mobius/Connectable<#A, #B> // kt.mobius.extras/mapped|mapped@kt.mobius.Connectable<0:2,0:3>(kotlin.Function1<0:0,0:2?>;kotlin.Function1<0:3,0:1?>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>}[0]

// Targets: [native]
final class <#A: kotlin/Any?> kt.mobius.extras/QueueingEventSubject : kotlinx.atomicfu.locks/SynchronizedObject, kt.mobius.functions/Consumer<#A>, kt.mobius/EventSource<#A> { // kt.mobius.extras/QueueingEventSubject|null[0]
    constructor <init>(kotlin/Int) // kt.mobius.extras/QueueingEventSubject.<init>|<init>(kotlin.Int){}[0]

    final fun accept(#A) // kt.mobius.extras/QueueingEventSubject.accept|accept(1:0){}[0]
    final fun subscribe(kt.mobius.functions/Consumer<#A>): kt.mobius.disposables/Disposable // kt.mobius.extras/QueueingEventSubject.subscribe|subscribe(kt.mobius.functions.Consumer<1:0>){}[0]
}

// Targets: [js, wasmJs, wasmWasi]
final class <#A: kotlin/Any?> kt.mobius.extras/QueueingEventSubject : kt.mobius.functions/Consumer<#A>, kt.mobius/EventSource<#A> { // kt.mobius.extras/QueueingEventSubject|null[0]
    constructor <init>(kotlin/Int) // kt.mobius.extras/QueueingEventSubject.<init>|<init>(kotlin.Int){}[0]

    final fun accept(#A) // kt.mobius.extras/QueueingEventSubject.accept|accept(1:0){}[0]
    final fun subscribe(kt.mobius.functions/Consumer<#A>): kt.mobius.disposables/Disposable // kt.mobius.extras/QueueingEventSubject.subscribe|subscribe(kt.mobius.functions.Consumer<1:0>){}[0]
}
