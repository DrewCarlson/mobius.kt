name: Native

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  gradle:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Cache Build files
        uses: actions/cache@v2
        if: ${{ !startsWith(matrix.os, 'windows') }}
        with:
          path: |
            ~/.konan
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}
      - uses: gradle/gradle-build-action@v2
        name: Test Windows Target
        if: ${{ startsWith(matrix.os, 'windows') }}
        with:
          arguments: windowsTest
      - uses: gradle/gradle-build-action@v2
        name: Test Windows Target (New MM)
        if: ${{ startsWith(matrix.os, 'windows') }}
        with:
          arguments: windowsTest -Pkotlin.native.binary.memoryModel=experimental
      - uses: gradle/gradle-build-action@v2
        name: Test Apple Targets
        if: ${{ startsWith(matrix.os, 'macos') }}
        with:
          arguments: macosTest iosX64Test # tvosX64Test watchosX86Test
      - uses: gradle/gradle-build-action@v2
        name: Test Apple Targets (New MM)
        if: ${{ startsWith(matrix.os, 'macos') }}
        with:
          arguments: macosTest iosX64Test -Pkotlin.native.binary.memoryModel=experimental # tvosX64Test watchosX86Test
      - uses: gradle/gradle-build-action@v2
        name: Test Linux Target
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        with:
          arguments: linuxTest
      - uses: gradle/gradle-build-action@v2
        name: Test Linux Target (New MM)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        with:
          arguments: linuxTest -Pkotlin.native.binary.memoryModel=experimental
